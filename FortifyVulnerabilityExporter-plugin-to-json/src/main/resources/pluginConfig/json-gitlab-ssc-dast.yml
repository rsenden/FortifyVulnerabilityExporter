---
spring.config.activate.on-loader-plugin: ssc

json.gitlab.dast.filter.expr: vuln.engineType=='WEBINSPECT'
json.gitlab.dast.format:
  fields:
    schema: https://gitlab.com/gitlab-org/security-products/security-report-schemas/-/raw/v14.0.0/dist/dast-report-format.json
    version: 14.0.0
    scan:
      start_time: $[#formatDateTime("yyyy-MM-dd'T'HH:mm:ss", applicationVersion.currentDynamicScan?.uploadDate?:'1970-01-01T00:00:00')]
      end_time: $[#formatDateTime("yyyy-MM-dd'T'HH:mm:ss", applicationVersion.currentDynamicScan?.uploadDate?:'1970-01-01T00:00:00')]
      status: success
      type: dast
      scanner:
        id: fortify-webinspect
        name: Fortify WebInspect
        url: https://www.microfocus.com/en-us/products/application-security-testing/overview
        version: WebInspect $[applicationVersion.currentDynamicScan?.engineVersion?:'version unknown']
        vendor: 
          name: Fortify
      scanned_resources: $[{}]
#      scanned_resources: |-
#        $[ 
#          release.siteTree==null ? {}
#            : release.siteTree.![{
#              method: method,
#              url: scheme+'://'+host+':'+port+path,
#              type: 'url' 
#            }] 
#        ] 
    vulnerabilities: $[vulnerabilityMappers.vulnerability.get()]
    # remediations: ...
  vulnerabilityMappers.vulnerability.fields:
    id: $[vuln.issueInstanceId]
    category: sast
    name: $[vuln.issueName]
    message: $[vuln.issueName]
    description: $[vuln.details?.brief]
    cve: $[vuln.instanceId]
    severity: $[vuln.friority]
    confidence: $[(vuln.friority matches "(Critical|Medium)") ? "High":"Low" ]
    solution: |-
      $[#htmlToText(vuln.details?.detail)]
      
      $[#htmlToText(vuln.details?.recommendation)]
    scanner:
      id: fortify-webinspect
      name: Fortify WebInspect
    identifiers:
      - name:  "Instance id: $[vuln.issueInstanceId]"
        type:  issueInstanceId
        value: $[vuln.issueInstanceId]
        url:   $[vuln.deepLink]
    links:
      - name: Additional issue details, including analysis trace, in Software Security Center
        url:  $[vuln.deepLink]
      - name: SecureCodeWarrior Training
        url:  $[vuln.details?.appSecTrainingUrl]
    # evidence: # TODO
    #   source:
    #     id:
    #     name:
    #     url:
    #   summary:
    #   request:
    #     headers:
    #       - name:
    #         value:
    #     method:
    #     url:
    #     body:
    #   response:
    #     headers:
    #       - name:
    #         value:
    #     reason_phrase: OK|Internal Server Error|...
    #     status_code: 200|500|...
    #     body:
    #   supporting_messages:
    #     - name:
    #       request: ...
    #       response: ...
    location:
      hostname: $[#uriPart(vuln.details.url, 'serverUrl')?:'']
      method: $[vuln.details.method?:'']
      param: $[vuln.details.attackPayload?:'']
      path: $[#uriPart(vuln.details.url, 'path')?:'']
    # assets:
    #   - type: http_session|postman
    #     name: 
    #     url: link to asset in build artifacts
    # discovered_at: 2020-01-28T03:26:02.956
    
    
    