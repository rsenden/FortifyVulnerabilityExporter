---
spring.config.activate.on-loader-plugin: fod

json.github.sast.filter.expr: vuln.scantype=='Static'
json.github.sast.format: 
  fields:
    "[$schema]": https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json 
    version: '2.1.0'
    runs:
      - tool:
          driver:
            name: 'Fortify on Demand'   
            version: SCA $[release.staticScanSummary?.staticScanSummaryDetails?.engineVersion?:'version unknown']; Rulepack $[release.staticScanSummary?.staticScanSummaryDetails?.rulePackVersion?:'version unknown']
            rules: $[vulnerabilityMappers.rules.get()]
        results: $[#check(vulnerabilityMappers.result.get().size()>1000, "GitHub does not support importing more than 1000 vulnerabilities. Please clean the scan results or update vulnerability search criteria.")?vulnerabilityMappers.result.get():{}]
  vulnerabilityMappers:
    rules.fields:
      id: $[vuln.id+'']
      shortDescription.text: $[vuln.category]
      fullDescription.text: $[#htmlToText(vuln.details?.summary)]
      help:
        text: $[#htmlToText(vuln.details?.explanation)+'\n\n'+#htmlToText(vuln.recommendations?.recommendations)+"\n\nFor more information, see "+vuln.deepLink]
      properties:
        tags: $[{vuln.severityString}]
        precision: $[(vuln.severityString matches "(Critical|Medium)") ? "high":"low" ]
    result.fields:
      ruleId: $[vuln.id+'']
      message: 
        text: $[#htmlToText(vuln.details?.summary)]
      level: $[(vuln.severityString matches "(Critical|High)") ? "warning":"note" ]
      partialFingerprints:
        issueInstanceId: $[vuln.instanceId]
      locations:
        - physicalLocation:
            artifactLocation:
              uri: $[vuln.primaryLocationFull]
            region:
              startLine: $[vuln.lineNumber==0?1:vuln.lineNumber]
              endLine: $[vuln.lineNumber==0?1:vuln.lineNumber]
              startColumn: $[1]  # Needs to be specified as an expression in order to end up as integer instead of string in JSON
              endColumn: $[80]
      codeFlows: |-
        $[ 
          vuln.traces==null ? {}
            : 
            {{ 
                threadFlows: vuln.traces.![{
                  locations: traceEntries?.![{
                    location: {
                        message: {
                            text: displayText
                        },
                        physicalLocation: {
                            artifactLocation: {
                                uri: location
                            },
                            region: {
                                startLine: lineNumber
                            }
                        }
                    }
                  }] 
                }] 
            }} 
        ]
      